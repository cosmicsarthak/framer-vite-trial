// Generated by Framer (cf4c6d7)
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
  addFonts,
  ComponentViewportProvider,
  Container,
  cx,
  GeneratedComponentContext,
  getFonts,
  useComponentViewport,
  useCustomCursors,
  useHydratedBreakpointVariants,
  useIsOnFramerCanvas,
  useLocaleInfo,
  withCSS,
} from "framer";
import { LayoutGroup, motion } from "framer-motion";
import * as React from "react";
import { useRef } from "react";
import Button from "#framer/local/canvasComponent/kZuk8wIV6/kZuk8wIV6.js";
import metadataProvider from "#framer/local/webPageMetadata/augiA20Il/augiA20Il.js";
const ButtonFonts = getFonts(Button);
const breakpoints = {};
const isBrowser = () => typeof document !== "undefined";
const serializationHash = "framer-6wgQi";
const variantClassNames = { WQLkyLRf1: "framer-v-72rtr7" };
const HTMLStyle = ({ value }) => {
  const onCanvas = useIsOnFramerCanvas();
  if (onCanvas) return null;
  return /*#__PURE__*/ _jsx("style", {
    dangerouslySetInnerHTML: { __html: value },
    "data-framer-html-style": "",
  });
};
const getProps = ({ height, id, width, ...props }) => {
  return { ...props };
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, ...restProps } = getProps(props);
  React.useEffect(() => {
    const metadata = metadataProvider(undefined, activeLocale);
    if (metadata.robots) {
      let robotsTag = document.querySelector('meta[name="robots"]');
      if (robotsTag) {
        robotsTag.setAttribute("content", metadata.robots);
      } else {
        robotsTag = document.createElement("meta");
        robotsTag.setAttribute("name", "robots");
        robotsTag.setAttribute("content", metadata.robots);
        document.head.appendChild(robotsTag);
      }
    }
  }, [undefined, activeLocale]);
  React.useInsertionEffect(() => {
    const metadata = metadataProvider(undefined, activeLocale);
    document.title = metadata.title || "";
    if (metadata.viewport) {
      document
        .querySelector('meta[name="viewport"]')
        ?.setAttribute("content", metadata.viewport);
    }
  }, [undefined, activeLocale]);
  const [baseVariant, hydratedBaseVariant] = useHydratedBreakpointVariants(
    variant,
    breakpoints,
    false,
  );
  const gestureVariant = undefined;
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  useCustomCursors({});
  return /*#__PURE__*/ _jsx(GeneratedComponentContext.Provider, {
    value: { primaryVariantId: "WQLkyLRf1", variantClassNames },
    children: /*#__PURE__*/ _jsxs(LayoutGroup, {
      id: layoutId ?? defaultLayoutId,
      children: [
        /*#__PURE__*/ _jsx(HTMLStyle, {
          value: "html body { background: rgb(0, 0, 0); }",
        }),
        /*#__PURE__*/ _jsx(motion.div, {
          ...restProps,
          className: cx(scopingClassNames, "framer-72rtr7", className),
          ref: refBinding,
          style: { ...style },
          children: /*#__PURE__*/ _jsx(ComponentViewportProvider, {
            children: /*#__PURE__*/ _jsx(Container, {
              className: "framer-1oa7mwg-container",
              nodeId: "dmu_FI0_N",
              scopeId: "augiA20Il",
              children: /*#__PURE__*/ _jsx(Button, {
                height: "100%",
                id: "dmu_FI0_N",
                layoutId: "dmu_FI0_N",
                style: { height: "100%", width: "100%" },
                variant: "bFkwa7f71",
                width: "100%",
              }),
            }),
          }),
        }),
        /*#__PURE__*/ _jsx("div", { id: "overlay" }),
      ],
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-6wgQi.framer-lux5qc, .framer-6wgQi .framer-lux5qc { display: block; }",
  ".framer-6wgQi.framer-72rtr7 { background-color: #000000; height: 600px; overflow: hidden; position: relative; width: 800px; }",
  ".framer-6wgQi .framer-1oa7mwg-container { bottom: 0px; flex: none; left: 0px; position: absolute; right: 0px; top: 0px; }",
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 600
 * @framerIntrinsicWidth 800
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]}}}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 * @framerAcceptsLayoutTemplate false
 * @framerScrollSections
 * @framerResponsiveScreen
 */ const FrameraugiA20Il = withCSS(Component, css, "framer-6wgQi");
export default FrameraugiA20Il;
FrameraugiA20Il.displayName = "Home";
FrameraugiA20Il.defaultProps = { height: 600, width: 800 };
addFonts(
  FrameraugiA20Il,
  [{ explicitInter: true, fonts: [] }, ...ButtonFonts],
  { supportsExplicitInterCodegen: true },
);
export const __FramerMetadata__ = {
  exports: {
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    default: {
      type: "reactComponent",
      name: "FrameraugiA20Il",
      slots: [],
      annotations: {
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]}}}',
        framerIntrinsicWidth: "800",
        framerIntrinsicHeight: "600",
        framerComponentViewportWidth: "true",
        framerScrollSections: "* @framerResponsiveScreen",
        framerAcceptsLayoutTemplate: "false",
        framerImmutableVariables: "true",
        framerContractVersion: "1",
        framerDisplayContentsDiv: "false",
      },
    },
    __FramerMetadata__: { type: "variable" },
  },
};
